{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  	"contentVersion": "1.0.0.0",
  	
	"parameters": {
   		"adminUsername": {
      			"type": "string",
      			"defaultValue": "sdwanuser",
      			"metadata": {
        			"description": "User name for the Virtual Machine."
      			}
    		},
    	"adminPassword": {
       		"type": "securestring",
       		"metadata": {
       			"description": "Admin password"
       		}
    	},
   		"vmName": {
      		"type": "string",
      		"defaultValue": "NetscalerSDWANSE1",
      		"metadata": {
        		"description": "Name of the VM"
      		}
    	},
    	"vmSize": {
      		"type": "string",
      		"defaultValue": "Standard_D3_v2",
      		"allowedValues": [
        		"Standard_D3_v2",
        		"Standard_D4_v2",
        		"Standard_D5_v2",
        		"Standard_D12_v2",
        		"Standard_D13_v2",
        		"Standard_D14_v2",
        		"Standard_D15_v2"
      		],
			"metadata": {
        		"description": "Size of the VM"
      		}
    	},
	"dnsLabelPrefix": {
      		"type": "string",
      		"defaultValue": "sdwanvmdns",
      		"metadata": {
        		"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      		}
        },
    	"SDWANOSVersion": {
      		"type": "string",
      		"defaultValue": "netscalersd-wanstandardedition",
      		"metadata": {
        		"description": "Netscaler SD-WAN Standard Edition VM version 9.2.0-89 beta edition."
      		}
    	}
  	},
	
  	"variables": {
    	"apiVersion": "2015-06-15",
    	"location": "[resourceGroup().location]",

    	"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sdwanimage')]",
    	"storageAccountType": "Standard_LRS",

    	"imagePublisher": "citrix",
    	"imageOffer": "netscaler-sd-wan",

    	"nic1Name": "wannic1",
    	"nic2Name": "lannic1",
    	"nic3Name": "mgmtnic1",

    	"vnetName": "vnet",
    	"vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    	"addressPrefix": "10.0.0.0/16",

    	"subnet1Name": "wansubnet1",
    	"subnet1Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet1Name'))]",
    	"subnet1Prefix": "10.0.111.0/24",
    	"subnet1PrivateAddress": "10.0.111.111",

    	"subnet2Name": "lansubnet1",
    	"subnet2Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet2Name'))]",
    	"subnet2Prefix": "10.0.112.0/24",
    	"subnet2PrivateAddress": "10.0.112.112",
	
    	"subnet3Name": "mgmtsubnet1",
    	"subnet3Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet3Name'))]",
    	"subnet3Prefix": "10.0.113.0/24",
    	"subnet3PrivateAddress": "10.0.113.113",
	
    	"publicIPAddressName": "[concat(uniquestring(resourceGroup().id), 'PublicIp')]",
    	"publicIPAddressType": "Dynamic",
    	"publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"

  	},
  	
	"resources": [
    	{
    		"type": "Microsoft.Storage/storageAccounts",
      		"apiVersion": "[variables('apiVersion')]",
      		"location": "[resourceGroup().location]",
      		"name": "[variables('storageAccountName')]",
      		"properties": {
        		"accountType": "[variables('storageAccountType')]"
      		}
    	},
    	{
      		"type": "Microsoft.Network/virtualNetworks",
      		"apiVersion": "[variables('apiVersion')]",
      		"location": "[resourceGroup().location]",
      		"name": "[variables('vnetName')]",
      		"properties": {
        		"addressSpace": {
         			"addressPrefixes": [
            			"[variables('addressPrefix')]"
          			]
				},
        		"subnets": [
           			{
            			"name": "[variables('subnet1Name')]",
            			"properties": {
              				"addressPrefix": "[variables('subnet1Prefix')]"
            			}
          			},
					{
            			"name": "[variables('subnet2Name')]",
            			"properties": {
              				"addressPrefix": "[variables('subnet2Prefix')]"
            			}
          			},
          			{
            			"name": "[variables('subnet3Name')]",
            			"properties": {
              				"addressPrefix": "[variables('subnet3Prefix')]"
            				}
          			}
        		]
      		}
    	},
    	{
      		"type": "Microsoft.Network/publicIPAddresses",
      		"apiVersion": "[variables('apiVersion')]",
      		"location": "[resourceGroup().location]",
      		"name": "[variables('publicIPAddressName')]",
      		"properties": {
			"dnsSettings": {
          			"domainNameLabel": "[parameters('dnsLabelPrefix')]"
        		},
        		"idleTimeoutInMinutes": 30,
        		"publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      		}
    	},
    	{
      		"type": "Microsoft.Network/networkInterfaces",
      		"apiVersion": "[variables('apiVersion')]",
      		"dependsOn": [
        		"[variables('vnetId')]",
        		"[variables('publicIPAddressId')]"
      		],
      		"location": "[resourceGroup().location]",
      		"name": "[variables('nic1Name')]",
      		"properties": {
        		"ipConfigurations": [
          			{
           				"name": "ipconfig1",
           				"properties": {
            				"privateIPAddress": "[variables('subnet1PrivateAddress')]",
              				"privateIPAllocationMethod": "Static",
              				"PublicIpAddress": {
                				"Id": "[variables('publicIPAddressId')]"
              				},
              				"subnet": {
                				"id": "[variables('subnet1Id')]"
              				}
            			}
          			}
        		]
      		}
    	},
    	{
      		"type": "Microsoft.Network/networkInterfaces",
      		"apiVersion": "[variables('apiVersion')]",
      		"dependsOn": [
        		"[variables('vnetId')]"
      		],
      		"location": "[resourceGroup().location]",
      		"name": "[variables('nic2Name')]",
      		"properties": {
        		"ipConfigurations": [
         			{
            			"name": "ipconfig2",
            			"properties": {
            				"privateIPAddress": "[variables('subnet2PrivateAddress')]",
              				"privateIPAllocationMethod": "Static",
              				"subnet": {
                				"id": "[variables('subnet2Id')]"
              				}
            			}
          			}
        		]
      		}
    	},
		{
      		"type": "Microsoft.Network/networkInterfaces",
      		"apiVersion": "[variables('apiVersion')]",
      		"dependsOn": [
        		"[variables('vnetId')]"
      		],
      		"location": "[resourceGroup().location]",
      		"name": "[variables('nic3Name')]",
      		"properties": {
        		"ipConfigurations": [
         			{
            			"name": "ipconfig3",
            			"properties": {
              				"privateIPAddress": "[variables('subnet3PrivateAddress')]",
              				"privateIPAllocationMethod": "Static",
              				"subnet": {
                				"id": "[variables('subnet3Id')]"
              				}
            			}
          			}
        		]
      		}
    	},
    	{
      		"type": "Microsoft.Compute/virtualMachines",
      		"apiVersion": "2016-04-30-preview",
      		"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        		"[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'))]",
        		"[concat('Microsoft.Network/networkInterfaces/', variables('nic2Name'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nic3Name'))]"
      		],
      		"location": "[resourceGroup().location]",
      		"name": "[parameters('vmName')]",
      		"properties": {
        		"diagnosticsProfile": {
          			"bootDiagnostics": {
            			"enabled": "true",
            			"storageUri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net')]"
          			}
        		},
        		"hardwareProfile": {
          			"vmSize": "[parameters('vmSize')]"
        		},
        		"networkProfile": {
          			"networkInterfaces": [
            			{
            				"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
              				"properties": {
                				"primary": true
              				}
            			},
						{
              				"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]",
              				"properties": {
                				"primary": false
              				}
            			},
            			{
              				"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic3Name'))]",
              				"properties": {
                				"primary": false
              				}
            			}
          			]
        		},
        		"osProfile": {
          			"computerName": "[parameters('vmName')]",
          			"adminUsername": "[parameters('adminUsername')]",
          			"adminPassword": "[parameters('adminPassword')]"
        		},
        		"storageProfile": {
          			"imageReference": {
            			"publisher": "[variables('imagePublisher')]",
            			"offer": "[variables('imageOffer')]",
            			"sku": "[parameters('SDWANOSVersion')]",
            			"version": "latest"
					},
					"osDisk": {
            			"createOption": "FromImage"
					}
				}
			}
		}
  	],
	
  	"outputs": {
    	"sshCommand": {
     		"type": "string",
      		"value": "[concat('ssh ', parameters('adminUsername'), '@', parameters('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    	} 
  	}
}
